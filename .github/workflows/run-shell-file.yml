name: DICE FRONTEND CI/CD

on:
  push:
    branches:
      - main

jobs:
  DOCKER_BUILD_PUSH:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/arm64,linux/amd64 -t pinomaker/dice-frontend:latest-arm64 -t pinomaker/dice-frontend:latest-amd64 --file Dockerfile . --push

  DOCKER_PULL_RUN:
    runs-on: ubuntu-latest
    needs: DOCKER_BUILD_PUSH
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize Known Hosts
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan ${{ secrets.EC2_HOST_DEV }} >> ~/.ssh/known_hosts

      - name: Set Permissions for Private Key
        run: |
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > $HOME/key.pem
          chmod 400 $HOME/key.pem

      - name: Run Docker
        env:
          SSH_PEM_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST_DEV }} "sudo docker container rm -f dice-frontend && sudo docker image rm pinomaker/dice-frontend:latest-amd64 && sudo docker pull pinomaker/dice-frontend:latest-amd64 && sudo docker run -d -p 80:80 --name dice-frontend pinomaker/dice-frontend:latest-amd64"
  NOTI:
    runs-on: ubuntu-latest

    steps:
      - name: Request Send Slack Message
        run: |
          echo "Send Slack Notification with CURL - Deploy Successful"
          curl --location 'http://125.133.34.224:8001/api/v1/slack/deploy' --header 'Content-Type: application/json' --data '{"name":"DICE_FRONTEND","url":"https://hooks.slack.com/services/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","message":"DICE_FRONTEND의 배포가 완료되었습니다."}'
